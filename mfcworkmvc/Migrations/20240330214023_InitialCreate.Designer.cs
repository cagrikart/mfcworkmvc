// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using mfcworkmvc;

#nullable disable

namespace mfcworkmvc.Migrations
{
    [DbContext(typeof(MvcDbContext))]
    [Migration("20240330214023_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("mfcworkmvc.Models.MainCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("MainCategories");
                });

            modelBuilder.Entity("mfcworkmvc.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("mainCategoryid")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("subCategoryid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("mainCategoryid");

                    b.HasIndex("subCategoryid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("mfcworkmvc.Models.SubCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("mainCategoryid")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("mainCategoryid");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("mfcworkmvc.Models.Product", b =>
                {
                    b.HasOne("mfcworkmvc.Models.MainCategory", "mainCategory")
                        .WithMany()
                        .HasForeignKey("mainCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mfcworkmvc.Models.SubCategory", "subCategory")
                        .WithMany()
                        .HasForeignKey("subCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mainCategory");

                    b.Navigation("subCategory");
                });

            modelBuilder.Entity("mfcworkmvc.Models.SubCategory", b =>
                {
                    b.HasOne("mfcworkmvc.Models.MainCategory", "mainCategory")
                        .WithMany()
                        .HasForeignKey("mainCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mainCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
